syntax = "proto3";
package transaction;


message TransactionUsage {
    bytes contract_uuid = 1;
    uint64 timestamp = 2;
    uint64 consumption = 3;
    uint64 production = 4;
    /*
       concat(contract_uuid, timestamp.to_bytes(8, big_endian), consumption.to_bytes(8, big_endian), production.to_bytes(8, big_endian))
    */
    bytes signature = 5;
}

message TransactionNewContract {
    bytes uuid = 1;
    uint64 timestamp = 2;
    bytes public_key = 3;
    /*
       concat(uuid, timestamp.to_bytes(8, big_endian), public_key)
    */
    bytes signature = 4;
    bytes contractor_signature = 5;
}

message TransactionCloseContract {
    bytes uuid = 1;
    uint64 timestamp = 2;

    bytes signature = 3;
}

message TransactionStartBalancing {
    uint64 timestamp = 1;
}

message TransactionBalance {
    uint64 timestamp = 1;
}

message TransactionEndBalancing {
    uint64 timestamp = 1;
}

message Transaction {
    oneof value {
        TransactionUsage usage = 1;
        TransactionNewContract new_contract = 2;
        TransactionCloseContract close_contract = 3;

        TransactionStartBalancing balance_start = 4;
        TransactionBalance balance = 5;
        TransactionEndBalancing balance_end = 6;
    }
}